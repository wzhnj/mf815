library(ISLR)
names(Smarket)
?Smarket
dim(Smarket)
summary(Smarket)
pairs(Smarket)
cor(Smarket[,-9])
attach(Smarket) # we can use variables by names below
plot(Volume)
glm.fits=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial)
summary(glm.fits)
coef(glm.fits)
summary(glm.fits)$coef
summary(glm.fits)$coef[,4] # p-values
glm.probs=predict(glm.fits,type="response")
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down",1250)
glm.pred[glm.probs>.5]="Up" # classify as "up" if glm.probs>0.5
table(glm.pred,Direction)
library(ISLR)
names(Smarket)
?Smarket
dim(Smarket)
summary(Smarket)
pairs(Smarket)
pairs(Smarket)
cor(Smarket[,-9])
attach(Smarket) # we can use variables by names below
library(ISLR)
names(Smarket)
?Smarket
dim(Smarket)
summary(Smarket)
pairs(Smarket)
cor(Smarket[,-9])
attach(Smarket) # we can use variables by names below
plot(Volume)
Smarket
glm.fits=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial)
summary(glm.fits)
coef(glm.fits)
summary(glm.fits)$coef
summary(glm.fits)$coef[,4] # p-values
glm.probs=predict(glm.fits,type="response")
coef(glm.fits)
summary(glm.fits)$coef
summary(glm.fits)$coef[,4] # p-values
glm.probs=predict(glm.fits,type="response")
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down",1250)
glm.pred[glm.probs>.5]="Up" # classify as "up" if glm.probs>0.5
table(glm.pred,Direction)
head(Smarket)
(507+145)/1250 # prob of correct classification for training data
mean(glm.pred==Direction)
# training test split
train=(Year<2005) # training date
train
year
Year
Smarket.2005=Smarket[!train,] # test date
Smarket.2005
dim(Smarket.2005)
Direction.2005=Direction[!train]
glm.fits=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial,subset=train)
glm.probs=predict(glm.fits,Smarket.2005,type="response")
glm.pred=rep("Down",252)
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
mean(glm.pred!=Direction.2005)
